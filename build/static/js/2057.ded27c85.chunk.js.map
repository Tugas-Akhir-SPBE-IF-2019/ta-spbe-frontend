{"version":3,"file":"static/js/2057.ded27c85.chunk.js","mappings":"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","sources":["components/NavBar/index.tsx","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/hasClass.js"],"sourcesContent":["import { Container, Nav, Navbar } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCertificate } from '@fortawesome/free-solid-svg-icons';\nimport { getAuthToken } from '../../utils/general';\n\nconst NavBar = (props: any) => {\n    const authToken = getAuthToken();\n    return (\n        <Navbar className=\"bg-purple\" variant=\"dark\">\n            <Container className=\"text-white m-auto\">\n                <Navbar.Brand href=\"/\">\n                    <FontAwesomeIcon icon={faCertificate} className=\"mx-1\" />\n                    TA SPBE\n                </Navbar.Brand>\n                <Nav className=\"m-auto\">\n                    {authToken ? \n                    <>\n                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n                        <Nav.Link href=\"/about\">Tentang</Nav.Link>\n                        <Nav.Link href=\"/tutorial\">Petunjuk</Nav.Link>\n                    </> : \n                    <>\n                        <Nav.Link href=\"/about\">Tentang</Nav.Link>\n                        <Nav.Link href=\"/tutorial\">Petunjuk</Nav.Link>\n                    </>}\n                </Nav>\n                <Nav>\n                    {authToken ?\n                        <Nav.Link href=\"/profile\">Profile</Nav.Link>\n                    :\n                        <Nav.Link href=\"/login\">Login</Nav.Link>\n                    }\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport React, { useRef, useEffect, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current\n    });\n  }, [inProp, handleTransition]);\n  useEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.in) {\n          setExited(false);\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish);\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}"],"names":["props","authToken","getAuthToken","className","variant","href","icon","faCertificate","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","ImperativeTransition","children","inProp","in","onExited","onEntered","transition","useState","exited","setExited","ref","onTransition","isInitialRef","handleTransition","useEventCallback","element","initial","useTransition","options","Promise","resolve","then","combinedRef","useMergedRefs","cloneElement","renderTransition","Component","runTransition","_jsx","Object","assign","NoopTransition","resolveContainerRef","document","canUseDOM","ownerDocument","body","getBoundingClientRect","useWaitForDOMRef","onResolved","window","useWindow","resolvedRef","setRef","earlyRef","nextRef","Context","createContext","undefined","Provider","useContext","contains","context","node","compareDocumentPosition","hasClass","classList","baseVal","indexOf"],"sourceRoot":""}