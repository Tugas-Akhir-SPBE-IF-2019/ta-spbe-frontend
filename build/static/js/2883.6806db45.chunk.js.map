{"version":3,"file":"static/js/2883.6806db45.chunk.js","mappings":"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","sources":["containers/UserDashboard/selector.tsx","containers/UserDashboard/index.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["const assessmentListSelector = (state: any) => {\n    return state?.userDashboardReducer?.assessmentList\n        ? state.userDashboardReducer.assessmentList\n        : [];\n};\n\nconst assessmentHistorySelector = (state: any) => {\n    return state?.userDashboardReducer?.history\n        ? state.userDashboardReducer.history\n        : null;\n};\n\nexport { assessmentListSelector, assessmentHistorySelector };\n","import { lazy, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { assessmentListSelector, assessmentHistorySelector } from \"./selector\";\nimport { getAssessmentList, getAssessmentHistory } from \"./action\";\nimport { Pagination } from 'react-bootstrap';\n\nconst UserDashboardComponent = lazy(() => import(\"../../components/UserDashboard\"));\n\nexport class UserDashboardContainer extends PureComponent<any, any> {\n    static propTypes = {\n        history: PropTypes.any,\n        assessmentResponse: PropTypes.any,\n        assessmentHistoryResponse: PropTypes.any,\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            showModal: false,\n            limit: 10,\n            page: 1,\n            institution: \"\",\n            dates: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            status: \"\",\n            total_pages: 0,\n            page_component: [],\n            history: [],\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.submitFilter = this.submitFilter.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handlePrev = this.handlePrev.bind(this);\n        this.getHistory = this.getHistory.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getAssessmentData(this.state);\n    }\n\n    componentDidUpdate(prevProps: any, prevState: any) {\n        const { assessmentResponse, assessmentHistoryResponse } = this.props;\n        const { page } = this.state;\n\n        if (prevProps.assessmentResponse !== assessmentResponse) {\n            let components: any[] = [];\n\n            components.push(<Pagination.Item\n                active={page === 1}\n                value={1}\n                onClick={() => this.handleInputChange({target: {name: \"page\", value: 1}}, \"PAGE\")}\n                >1</Pagination.Item>);\n\n            if (page-2 > 2) {\n                components.push(<Pagination.Ellipsis />);\n            }\n\n            for (let p=page-2; p<=page+2; p++) {\n                if (p > 0 && p !== 1 && p < assessmentResponse.total_pages) {\n                    components.push(<Pagination.Item\n                        active={page === p}\n                        value={p}\n                        onClick={() => this.handleInputChange({target: {name: \"page\", value: p}}, \"PAGE\")}\n                        >{p}</Pagination.Item>);\n                }\n            }\n\n            if (page+2 < assessmentResponse.total_pages-1) {\n                components.push(<Pagination.Ellipsis />);\n            }\n\n            if (assessmentResponse.total_pages !== 1) {\n                components.push(<Pagination.Item\n                    active={page === assessmentResponse.total_pages}\n                    value={assessmentResponse.total_pages}\n                    onClick={() => this.handleInputChange({target: {name: \"page\", value: assessmentResponse.total_pages}}, \"PAGE\")}\n                    >{assessmentResponse.total_pages}</Pagination.Item>);\n            }\n\n            this.setState({\n                ...this.state,\n                total_pages: assessmentResponse.total_pages,\n                page_component: components,\n            });\n        }\n\n        if (prevState.page !== page) {\n            this.submitFilter(true);\n        }\n\n        if (prevProps.assessmentHistoryResponse !== assessmentHistoryResponse) {\n            let newStatus: any[] = [];\n            for (let stat of assessmentHistoryResponse.status_histories) {\n                if (!newStatus.some(e => e.status === stat.status)) {\n                    newStatus.push(stat);\n                }\n            }\n            this.setState({\n                ...this.state,\n                history: newStatus,\n            })\n        }\n\n        if (prevState.history !== this.state.history) {\n            this.toggleModal();\n        }\n    }\n\n    private toggleModal(): void {\n        const { showModal } = this.state;\n        this.setState({\n            ...this.state,\n            showModal: !showModal,\n        })\n    }\n\n    private handleInputChange(e: any, type: string): void {\n        if (type === \"DATE\") {\n            const { value } = e.target;\n            let dates = value.split(\" - \");\n            this.setState({\n                ...this.state,\n                start_date: dates[0],\n                end_date: dates[1],\n            });\n        }\n        else {\n            // Type === INSTITUTION / LIMIT / STATUS\n            const { name, value } = e.target;\n            this.setState({\n                ...this.state,\n                [name]: value,\n            });\n        }\n    }\n\n    private submitFilter(changePage: any): void {\n        const { limit, page, institution, start_date, end_date, status } = this.state;\n        let formValues = {\n            limit: limit,\n            page: (changePage ? page : 1),\n            institution: institution,\n            start_date: start_date,\n            end_date: end_date,\n            status: status,\n        }\n        this.props.getAssessmentData(formValues);\n    }\n\n    private handleNext(): void {\n        const { page, total_pages } = this.state;\n        if (page+1 <= total_pages) {\n            this.setState({\n                ...this.state,\n                page: page+1,\n            });\n        }\n    }\n\n    private handlePrev(): void {\n        const { page } = this.state;\n        if (page-1 >= 1) {\n            this.setState({\n                ...this.state,\n                page: page-1,\n            });\n        }\n    }\n\n    private getHistory(idx: number): void {\n        const { assessmentResponse } = this.props;\n        this.props.getHistoryData(assessmentResponse.items[idx].id);\n    }\n\n    render() {\n        const { assessmentResponse, assessmentHistoryResponse } = this.props;\n        const { showModal, page_component, history } = this.state;\n        return (\n            <UserDashboardComponent\n                assessmentResponse={assessmentResponse}\n                showModal={showModal}\n                toggleModal={this.toggleModal}\n                handleInputChange={this.handleInputChange}\n                submitFilter={this.submitFilter}\n                page_component={page_component}\n                handleNext={this.handleNext}\n                handlePrev={this.handlePrev}\n                assessmentHistoryResponse={assessmentHistoryResponse}\n                getHistory={this.getHistory}\n                history={history}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        assessmentResponse: assessmentListSelector(state),\n        assessmentHistoryResponse: assessmentHistorySelector(state),\n    };\n};\n  \nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        getAssessmentData: (params: any) => dispatch(getAssessmentList(params)),\n        getHistoryData: (params: any) => dispatch(getAssessmentHistory(params)),\n    };\n}\n  \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserDashboardContainer);","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["assessmentListSelector","state","userDashboardReducer","assessmentList","assessmentHistorySelector","history","UserDashboardComponent","lazy","UserDashboardContainer","props","showModal","limit","page","institution","dates","start_date","end_date","status","total_pages","page_component","toggleModal","bind","handleInputChange","submitFilter","handleNext","handlePrev","getHistory","this","getAssessmentData","prevProps","prevState","assessmentResponse","assessmentHistoryResponse","components","push","Pagination","active","value","onClick","target","name","p","setState","newStatus","status_histories","stat","some","e","type","split","changePage","formValues","idx","getHistoryData","items","id","PureComponent","connect","dispatch","params","getAssessmentList","getAssessmentHistory","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}