{"version":3,"file":"static/js/450.4be34785.chunk.js","mappings":"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","sources":["containers/ValidateResult/selector.tsx","containers/ValidateResult/index.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["const assessmentResultSelector = (state: any) => {\n    return state?.validateResultReducer?.assessmentResult\n        ? state.validateResultReducer.assessmentResult\n        : null;\n};\n\nconst validationMessageSelector = (state: any) => {\n    return state?.validateResultReducer?.validationMessage\n        ? state.validateResultReducer.validationMessage\n        : null;\n};\n\nexport {\n    assessmentResultSelector,\n    validationMessageSelector,\n};\n","import { lazy, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { assessmentResultSelector, validationMessageSelector } from \"./selector\";\nimport { getAssessmentResult, sendValidation } from \"./action\";\nimport { showToast } from \"../../utils/general\";\n\nconst ValidateResultComponent = lazy(() => import(\"../../components/ValidateResult\"));\n\nexport class ValidateResultContainer extends PureComponent<any, any> {\n    static propTypes = {\n        history: PropTypes.any,\n        assessmentResultResponse: PropTypes.object,\n        validationMessageResponse: PropTypes.string,\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            item: {\n                indicator_number: \"\",\n                result_correct: false,\n                correct_level: 0,\n                explanation: \"\",\n            },\n            listItem: [],\n            link_list: [],\n            showModal: false,\n        };\n        this.handleParseHTML = this.handleParseHTML.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSendValidation = this.handleSendValidation.bind(this);\n        this.initField = this.initField.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getAssessmentResultData(id);\n    }\n\n    componentDidUpdate(prevProps: any) {\n        if (prevProps.assessmentResultResponse !== this.props.assessmentResultResponse) {\n            this.initField();\n        }\n        if (prevProps.validationMessageResponse !== this.props.validationMessageResponse) {\n            this.toggleModal();\n        }\n    }\n    \n    private initField(): void {\n        const { assessmentResultResponse } = this.props;\n        const { item } = this.state;\n        let list: any[] = [];\n        let newLink: any[] = [];\n        assessmentResultResponse.result.forEach(function (el) {\n            let newItem = {\n                ...item,\n                indicator_number: el.indicator_number,\n            }\n            list.push(newItem);\n\n            if (!newLink.includes(el.indicator_number)) {\n                newLink.push(el.indicator_number);\n            }\n        });\n\n        this.setState({\n            ...this.state,\n            listItem: list,\n            link_list: newLink,\n        });\n    }\n\n    private handleParseHTML(raw: any): any {\n        const parse = require('html-react-parser');\n        return parse(String(raw));\n    }\n\n    private handleInputChange(e: any, type: string, idx: number): void {\n        const { name, value } = e.target;\n        const { listItem } = this.state;\n        let val = value;\n        let newListItem = [...listItem];\n        if (type === \"INT\") {\n            val = parseInt(value);\n        }\n        else if (type === \"BOOL\") {\n            val = Boolean(Number(value));\n        }\n\n        let key = name.split(\"-\")[0];\n        newListItem[idx][key] = val;\n        this.setState({\n            ...this.state,\n            listItem: newListItem,\n        })\n    }\n\n    private handleSendValidation(e: any): void {\n        e.preventDefault();\n        const { id } = this.props.match.params;\n        let formValues = {\n            data: this.state.listItem,\n            id: id,\n        }\n        if (this.validateForm()) {\n            this.props.sendValidationData(formValues);\n        }\n    }\n\n    private toggleModal(): void {\n        const { showModal } = this.state;\n        this.setState({\n            ...this.state,\n            showModal: !showModal,\n        })\n    }\n\n    private validateForm(): boolean {\n        const { listItem } = this.state;\n        for (let item of listItem) {\n            if (!item.result_correct) {\n                if (!item.correct_level) {\n                    showToast(\"Level yang benar harus diisi!\");\n                    return false;\n                }\n                else if (!item.explanation.replaceAll(\" \", \"\")) {\n                    showToast(\"Penjelasan harus diisi!\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    render() {\n        const { assessmentResultResponse, validationMessageResponse } = this.props;\n        const { listItem, link_list, showModal } = this.state;\n        return (\n            <ValidateResultComponent\n                assessmentResultResponse={assessmentResultResponse}\n                validationMessageResponse={validationMessageResponse}\n                handleParseHTML={this.handleParseHTML}\n                handleInputChange={this.handleInputChange}\n                handleSendValidation={this.handleSendValidation}\n                listItem={listItem}\n                link_list={link_list}\n                toggleModal={this.toggleModal}\n                showModal={showModal}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        assessmentResultResponse: assessmentResultSelector(state),\n        validationMessageResponse: validationMessageSelector(state),\n    };\n};\n  \nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        getAssessmentResultData: (params: any) => dispatch(getAssessmentResult(params)),\n        sendValidationData: (params: any) => dispatch(sendValidation(params)),\n    };\n}\n  \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ValidateResultContainer);","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["assessmentResultSelector","state","validateResultReducer","assessmentResult","validationMessageSelector","validationMessage","ValidateResultComponent","lazy","ValidateResultContainer","props","item","indicator_number","result_correct","correct_level","explanation","listItem","link_list","showModal","handleParseHTML","bind","handleInputChange","handleSendValidation","initField","toggleModal","validateForm","id","this","match","params","getAssessmentResultData","prevProps","assessmentResultResponse","validationMessageResponse","list","newLink","result","forEach","el","newItem","push","includes","setState","raw","require","parse","String","e","type","idx","target","name","value","val","newListItem","parseInt","Boolean","Number","key","split","preventDefault","formValues","data","sendValidationData","showToast","replaceAll","PureComponent","connect","dispatch","getAssessmentResult","sendValidation","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}