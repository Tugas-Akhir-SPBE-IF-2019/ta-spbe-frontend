{"version":3,"file":"static/js/7217.ca13a851.chunk.js","mappings":"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","sources":["containers/EditProfileWork/selector.tsx","containers/EditProfileWork/index.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["const jobDataSelector = (state: any) => {\n    return state?.editJobDataReducer?.jobData\n        ? state.editJobDataReducer.jobData\n        : [];\n};\n\nconst successMessageSelector = (state: any) => {\n    return state?.editJobDataReducer?.successMessage\n        ? state.editJobDataReducer.successMessage\n        : \"\";\n};\n\nexport {\n    jobDataSelector,\n    successMessageSelector\n};\n","import { lazy, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    jobDataSelector,\n    successMessageSelector\n} from \"./selector\";\nimport {\n    getJobData,\n    updateJobData\n} from \"./action\";\nimport { showToast } from \"../../utils/general\";\n\nconst EditProfileWorkComponent = lazy(() => import(\"../../components/EditProfileWork\"));\n\nexport class EditProfileWorkContainer extends PureComponent<any, any> {\n    static propTypes = {\n        history: PropTypes.any,\n        jobDataResponse: PropTypes.any,\n        successMessageResponse: PropTypes.string,\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            list_items: [],\n        };\n        this.addField = this.addField.bind(this);\n        this.deleteField = this.deleteField.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.validateEdit = this.validateEdit.bind(this);\n        this.handleUpdateJobData = this.handleUpdateJobData.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getProfileJobData();\n    }\n\n    componentDidUpdate(prevProps: any) {\n        const { list_items } = this.state;\n        const { jobDataResponse } = this.props;\n        if (prevProps.jobDataResponse !== jobDataResponse) {\n            if (jobDataResponse.length !== 0) {\n                this.setState({\n                    ...this.state,\n                    list_items: JSON.parse(JSON.stringify(jobDataResponse)),\n                });\n            }\n            else if (list_items.length === 0) {\n                this.addField();\n            }\n        }\n        if (prevProps.successMessageResponse !== this.props.successMessageResponse) {\n            this.toggleModal();\n        }\n    }\n\n    private addField(): void {\n        const { list_items } = this.state;\n        let item = {\n            job: \"\",\n            company: \"\",\n            joined_year: \"\",\n        };\n        this.setState({\n            ...this.state,\n            list_items: [...list_items, item],\n        })\n    }\n\n    private deleteField(index: number): void {\n        const { list_items } = this.state;\n        let new_list = [...list_items];\n        new_list.splice(index+1, 1);\n        this.setState({\n            ...this.state,\n            list_items: new_list,\n        })\n    }\n\n    private handleInputChange(e: any, index: number): void {\n        const { name, value } = e.target;\n        const { list_items } = this.state;\n\n        let val = value;\n        let new_list = [...list_items];\n        if (name === \"joined_year\" && val !== \"\") {\n            val = parseInt(val);\n        }\n        new_list[index][name] = val;\n        this.setState({\n            ...this.state,\n            list_items: new_list,\n        })\n    }\n\n    private validateEdit(): boolean {\n        const { list_items } = this.state;\n        for (let item of list_items) {\n            if (!item.role) {\n                showToast(\"Peran harus diisi!\");\n                return false;\n            }\n            else if (!item.company) {\n                showToast(\"Nama instansi harus diisi!\");\n                return false;\n            }\n            else if (!item.joined_year) {\n                showToast(\"Tahun masuk harus diisi!\");\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private handleUpdateJobData(e: any): void {\n        e.preventDefault();\n        const { list_items } = this.state;\n        if (this.validateEdit()) {\n            this.props.updateProfileJobData(list_items);\n        }\n    }\n\n    private toggleModal(): void {\n        this.setState({\n            ...this.state,\n            showModal: !this.state.showModal,\n        });\n    }\n\n    render() {\n        const { list_items, showModal } = this.state;\n        return (\n            <EditProfileWorkComponent\n                list_items={list_items}\n                addField={this.addField}\n                deleteField={this.deleteField}\n                handleInputChange={this.handleInputChange}\n                handleUpdateJobData={this.handleUpdateJobData}\n                showModal={showModal}\n                toggleModal={this.toggleModal}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        jobDataResponse: jobDataSelector(state),\n        successMessageResponse: successMessageSelector(state),\n    };\n};\n  \nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        getProfileJobData: () => dispatch(getJobData()),\n        updateProfileJobData: (params: any) => dispatch(updateJobData(params)),\n    };\n}\n  \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditProfileWorkContainer);","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["jobDataSelector","state","editJobDataReducer","jobData","successMessageSelector","successMessage","EditProfileWorkComponent","lazy","EditProfileWorkContainer","props","list_items","addField","bind","deleteField","handleInputChange","validateEdit","handleUpdateJobData","toggleModal","this","getProfileJobData","prevProps","jobDataResponse","length","setState","JSON","parse","stringify","successMessageResponse","job","company","joined_year","index","new_list","splice","e","target","name","value","val","parseInt","item","role","showToast","preventDefault","updateProfileJobData","showModal","PureComponent","connect","dispatch","getJobData","params","updateJobData","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}